# Generated by Django 3.1.6 on 2021-04-04 11:08

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('second_name', models.CharField(max_length=40)),
                ('position', models.CharField(max_length=40)),
                ('start_year', models.IntegerField(max_length=4)),
                ('home_address', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('area', models.FloatField()),
                ('appointment', models.CharField(choices=[('lecture', 'lecture'), ('laboratory', 'laboratory'), ('staff_only', 'staff_only'), ('gym', 'gym'), ('other', 'other')], max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Unit_of_property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_number', models.BigIntegerField(unique=True)),
                ('date_of_registration', models.DateField()),
                ('revaluation_year', models.IntegerField(blank=True, max_length=4, null=True)),
                ('cost', models.FloatField()),
                ('lifetime', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Subdivision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subdivision_name', models.CharField(max_length=45)),
                ('phone_number', models.BigIntegerField(blank=True, max_length=11, null=True)),
                ('subdivision_type', models.CharField(choices=[('faculty', 'faculty'), ('department', 'department'), ('mega-faculty', 'mega-faculty'), ('other', 'other')], max_length=45)),
                ('id_subdivision', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property_register_app.subdivision')),
            ],
        ),
        migrations.CreateModel(
            name='Property_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_creation', models.DateField()),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property_register_app.classroom')),
                ('unit_of_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property_register_app.unit_of_property')),
            ],
        ),
        migrations.CreateModel(
            name='Property_liability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property_register_app.classroom')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='classroom',
            name='employee',
            field=models.ManyToManyField(through='property_register_app.Property_liability', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='classroom',
            name='subdivision',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property_register_app.subdivision'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='unit_of_property',
            field=models.ManyToManyField(through='property_register_app.Property_list', to='property_register_app.Unit_of_property'),
        ),
        migrations.AddField(
            model_name='employee',
            name='subdivision',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property_register_app.subdivision'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
